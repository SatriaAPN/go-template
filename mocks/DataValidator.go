// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// DataValidator is an autogenerated mock type for the DataValidator type
type DataValidator struct {
	mock.Mock
}

// IsEmailValid provides a mock function with given fields: email
func (_m *DataValidator) IsEmailValid(email string) bool {
	ret := _m.Called(email)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(email)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewDataValidator interface {
	mock.TestingT
	Cleanup(func())
}

// NewDataValidator creates a new instance of DataValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDataValidator(t mockConstructorTestingTNewDataValidator) *DataValidator {
	mock := &DataValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

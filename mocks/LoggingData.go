// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// LoggingData is an autogenerated mock type for the LoggingData type
type LoggingData struct {
	mock.Mock
}

// GetInfo provides a mock function with given fields:
func (_m *LoggingData) GetInfo() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetParam provides a mock function with given fields:
func (_m *LoggingData) GetParam() map[string]interface{} {
	ret := _m.Called()

	var r0 map[string]interface{}
	if rf, ok := ret.Get(0).(func() map[string]interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]interface{})
		}
	}

	return r0
}

type mockConstructorTestingTNewLoggingData interface {
	mock.TestingT
	Cleanup(func())
}

// NewLoggingData creates a new instance of LoggingData. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLoggingData(t mockConstructorTestingTNewLoggingData) *LoggingData {
	mock := &LoggingData{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
